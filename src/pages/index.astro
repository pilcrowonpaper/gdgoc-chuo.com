---

---

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link
            rel="icon"
            type="image/png"
            href="https://res.cloudinary.com/startup-grind/image/upload/c_fill,dpr_2.0,f_auto,g_center,h_32,q_auto:good,w_32/v1/gcs/platform-data-goog/contentbuilder/GDG_Bevy_Favicon_y29LtMy.png"
            sizes="32x32"
        />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>Google Developer Group on Campus Chuo University</title>
    </head>
    <body>
        <div id="card">
            <div style="width: fit-content;">
                <pre id="art" aria-hidden="true"></pre>
                <noscript>Enable JavaScript.</noscript>
            </div>
            <div
                style="font-weight: normal; font-size: 1rem; position: absolute; bottom: 0; left: 0;width: 100%;"
            >
                <div id="card-header">
                    <p>
                        <span aria-hidden="true">&lt;&gt;</span> Google Developer
                        Group on Campus @ <span
                            style="color: var(--accent-color)"
                            >Chuo University</span
                        >
                    </p>
                    <ul style="list-style: none; display: flex; gap: 2rem;">
                        <li>
                            <a href="https://x.com/gdgs_chuo" class="link"
                                >Twitter/X</a
                            >
                        </li>
                        <li>
                            <a
                                href="https://www.instagram.com/gdgs_chuo"
                                class="link">Instagram</a
                            >
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </body>
</html>

<script>
    import art from "@src/art?raw";

    const artElementId = "art";

    const patternRand = Math.random();
    if (patternRand >= 0.75) {
        runPattern1();
    } else if (patternRand >= 0.5) {
        runPattern2();
    } else if (patternRand >= 0.25) {
        runPattern3();
    } else {
        runPattern4();
    }

    async function runPattern1(): Promise<void> {
        const artElement = document.getElementById(artElementId);
        if (!(artElement instanceof HTMLPreElement)) {
            throw new Error(`'${artElementId}' not a pre element`);
        }
        const uniqueChars: string[] = [];
        for (let i = 0; i < art.length; i++) {
            if (!uniqueChars.includes(art[i]) && art[i] !== "\n") {
                uniqueChars.push(art[i]);
            }
        }
        console.log(uniqueChars);
        let currentState = "";
        for (let i = 0; i < art.length; i++) {
            if (art[i] !== "\n") {
                currentState += " ";
            } else {
                currentState += "\n";
            }
        }
        let timePassed = 0;
        while (currentState !== art) {
            // if (timePassed > 5000) {
            //     artElement.innerText = art;
            //     break;
            // }
            let nextState = "";
            for (let i = 0; i < art.length; i++) {
                if (currentState[i] !== art[i]) {
                    if (currentState[i] === " ") {
                        if (Math.random() < 0.05) {
                            nextState +=
                                uniqueChars[
                                    Math.floor(
                                        Math.random() * uniqueChars.length
                                    )
                                ];
                        } else {
                            nextState += " ";
                        }
                    } else {
                        if (timePassed > 3000 && Math.random() < 0.2) {
                            nextState += art[i];
                        } else {
                            nextState +=
                                uniqueChars[
                                    Math.floor(
                                        Math.random() * uniqueChars.length
                                    )
                                ];
                        }
                    }
                } else {
                    nextState += currentState[i];
                }
            }
            artElement.innerText = nextState;
            currentState = nextState;
            await wait(50);
            timePassed += 50;
        }
    }

    async function runPattern2(): Promise<void> {
        const artElement = document.getElementById(artElementId);
        if (!(artElement instanceof HTMLPreElement)) {
            throw new Error(`'${artElementId}' not a pre element`);
        }
        const uniqueChars: string[] = [];
        for (let i = 0; i < art.length; i++) {
            if (!uniqueChars.includes(art[i]) && art[i] !== "\n") {
                uniqueChars.push(art[i]);
            }
        }
        let currentState = "";
        for (let i = 0; i < art.length; i++) {
            if (art[i] !== "\n") {
                currentState += " ";
            } else {
                currentState += "\n";
            }
        }

        const loop = ["|", "/", "-", "\\"];
        let timePassed = 0;
        while (currentState !== art) {
            let nextState = "";
            for (let i = 0; i < art.length; i++) {
                if (currentState[i] === "\n") {
                    nextState += "\n";
                } else if (loop.includes(currentState[i])) {
                    const rand = Math.random();
                    let chance: number;
                    if (timePassed > 3000) {
                        chance = 0.2;
                    } else if (timePassed > 2000) {
                        chance = 0.15;
                    } else {
                        chance = 0.1;
                    }
                    if (rand < chance) {
                        nextState += art[i];
                    } else {
                        const nextLoopIndex =
                            (loop.indexOf(currentState[i]) + 1) % loop.length;
                        nextState += loop[nextLoopIndex];
                    }
                } else if (currentState[i] !== art[i]) {
                    const rand = Math.random();
                    let chance: number;
                    if (timePassed > 3000) {
                        chance = 0.05;
                    } else if (timePassed > 1000) {
                        chance = 0.02;
                    } else if (timePassed > 500) {
                        chance = 0.01;
                    } else {
                        chance = 0.005;
                    }
                    if (rand < chance) {
                        nextState += loop[0];
                    } else {
                        nextState += currentState[i];
                    }
                } else {
                    nextState += currentState[i];
                }
            }
            artElement.innerText = nextState;
            currentState = nextState;
            await wait(50);
            timePassed += 50;
        }
    }

    async function runPattern3(): Promise<void> {
        const artElement = document.getElementById(artElementId);
        if (!(artElement instanceof HTMLPreElement)) {
            throw new Error(`'${artElementId}' not a pre element`);
        }
        const uniqueChars: string[] = [];
        for (let i = 0; i < art.length; i++) {
            if (!uniqueChars.includes(art[i]) && art[i] !== "\n") {
                uniqueChars.push(art[i]);
            }
        }
        let currentState = "";
        for (let i = 0; i < art.length; i++) {
            if (art[i] !== "\n") {
                currentState += " ";
            } else {
                currentState += "\n";
            }
        }

        const chars = [
            " ",
            ".",
            "'",
            ",",
            ";",
            ":",
            "c",
            "l",
            "o",
            "d",
            "x",
            "k",
            "O",
            "0",
            "K",
            "X",
            "N",
            "W",
        ];
        let timePassed = 0;
        while (currentState !== art) {
            let nextState = "";
            for (let i = 0; i < art.length; i++) {
                if (currentState[i] === "\n") {
                    nextState += "\n";
                } else if (currentState[i] !== art[i]) {
                    const charIndex = chars.indexOf(currentState[i]);
                    const rand = Math.random();
                    let chance: number;
                    if (timePassed > 3000) {
                        chance = 0.2;
                    } else if (timePassed > 2000) {
                        chance = 0.1;
                    } else if (timePassed > 1000) {
                        chance = 0.05;
                    } else {
                        chance = 0.01;
                    }
                    if (rand < chance) {
                        nextState += chars[charIndex + 1];
                    } else {
                        nextState += currentState[i];
                    }
                } else {
                    nextState += currentState[i];
                }
            }
            artElement.innerText = nextState;
            currentState = nextState;
            await wait(50);
            timePassed += 50;
        }
    }

    async function runPattern4(): Promise<void> {
        const artElement = document.getElementById(artElementId);
        if (!(artElement instanceof HTMLPreElement)) {
            throw new Error(`'${artElementId}' not a pre element`);
        }
        const uniqueChars: string[] = [];
        for (let i = 0; i < art.length; i++) {
            if (
                !uniqueChars.includes(art[i]) &&
                art[i] !== "\n" &&
                art[i] !== " "
            ) {
                uniqueChars.push(art[i]);
            }
        }
        let currentState = "";
        for (let i = 0; i < art.length; i++) {
            if (art[i] !== "\n") {
                currentState += " ";
            } else {
                currentState += "\n";
            }
        }

        let timePassed = 0;
        while (currentState !== art) {
            let nextState = "";
            for (let i = 0; i < art.length; i++) {
                if (currentState[i] === "\n") {
                    nextState += "\n";
                } else if (currentState[i] !== art[i]) {
                    if (currentState[i] === " ") {
                        const topIndexMaybe = i - 301;
                        const bottomIndexMaybe = i + 301;
                        const leftIndexMaybe = i - 1;
                        const rightIndexMaybe = i + 1;

                        let chance = 0.001;
                        if (
                            topIndexMaybe >= 0 &&
                            topIndexMaybe < art.length &&
                            currentState[topIndexMaybe] !== " " &&
                            currentState[topIndexMaybe] !== "\n"
                        ) {
                            chance += 0.1;
                        }
                        if (
                            bottomIndexMaybe >= 0 &&
                            bottomIndexMaybe < art.length &&
                            currentState[bottomIndexMaybe] !== " " &&
                            currentState[bottomIndexMaybe] !== "\n"
                        ) {
                            chance += 0.1;
                        }
                        if (
                            leftIndexMaybe >= 0 &&
                            leftIndexMaybe < art.length &&
                            currentState[leftIndexMaybe] !== " " &&
                            currentState[leftIndexMaybe] !== "\n"
                        ) {
                            chance += 0.1;
                        }
                        if (
                            rightIndexMaybe >= 0 &&
                            rightIndexMaybe < art.length &&
                            currentState[rightIndexMaybe] !== " " &&
                            currentState[rightIndexMaybe] !== "\n"
                        ) {
                            chance += 0.1;
                        }
                        if (Math.random() < chance) {
                            nextState +=
                                uniqueChars[
                                    Math.floor(
                                        Math.random() * uniqueChars.length
                                    )
                                ];
                        } else {
                            nextState += currentState[i];
                        }
                    } else {
                        if (Math.random() < 0.2) {
                            nextState += art[i];
                        } else {
                            nextState +=
                                uniqueChars[
                                    Math.floor(
                                        Math.random() * uniqueChars.length
                                    )
                                ];
                        }
                    }
                } else {
                    nextState += currentState[i];
                }
            }
            artElement.innerText = nextState;
            currentState = nextState;
            await wait(50);
            timePassed += 50;
        }
    }

    async function wait(ms: number): Promise<void> {
        return new Promise((r) => setTimeout(r, ms));
    }
</script>

<style>
    * {
        margin: 0;
        padding: 0;
        art-decoration: none;
        border: none;
        appearance: none;
    }

    html {
        font-family: "SF Mono", "Operator Mono", "Roboto Mono", "Menlo",
            "Monaco", "Consolas", monospace;
        font-size: 1rem;
        --accent-color: #cf0100;
    }

    @media (prefers-color-scheme: dark) {
        html {
            --accent-color: #ff8181;
            background-color: #0e0e0e;
            color: #eaeaea;
        }
    }

    #card {
        width: 100%;
        height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        border-bottom: solid 1px var(--accent-color);
    }

    #art {
        font-size: min(calc(100vw / 300 * 1.5), calc(80vh / 120), 0.5rem);
        color: #cf0100;
        user-select: none;
    }

    @media (prefers-color-scheme: dark) {
        #art {
            color: var(--accent-color);
        }
    }

    .link {
        color: var(--accent-color);
        art-decoration: underline;
        cursor: pointer;
    }

    #card-header {
        padding: 1rem 2rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    @media (max-width: 60rem) {
        #card-header {
            padding: 1rem;
            flex-direction: column;
            align-items: start;
            justify-content: left;
            gap: 1rem;
        }
    }
</style>
